classdef adg_v2 < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        UIFigure              matlab.ui.Figure
        GridLayout3           matlab.ui.container.GridLayout
        ParametryokienparametrycznychPanel  matlab.ui.container.Panel
        GridLayout            matlab.ui.container.GridLayout
        ChebyEditField        matlab.ui.control.NumericEditField
        ChebyEditFieldLabel   matlab.ui.control.Label
        TukeyEditField        matlab.ui.control.NumericEditField
        TukeyEditFieldLabel   matlab.ui.control.Label
        GaussEditField        matlab.ui.control.NumericEditField
        GaussLabel            matlab.ui.control.Label
        KaiserEditField       matlab.ui.control.NumericEditField
        KaiserEditFieldLabel  matlab.ui.control.Label
        ListBoxWykres         matlab.ui.control.ListBox
        TabGroup              matlab.ui.container.TabGroup
        OknaTab               matlab.ui.container.Tab
        GridLayout2           matlab.ui.container.GridLayout
        ListBoxOkno           matlab.ui.control.ListBox
        ZeropadTab            matlab.ui.container.Tab
        GridLayout4           matlab.ui.container.GridLayout
        ListBoxZeroPad        matlab.ui.control.ListBox
        UyjdyskretnegouzupenieniazeramiCheckBox  matlab.ui.control.CheckBox
        CzytajprobkiButton    matlab.ui.control.Button
        UIAxes                matlab.ui.control.UIAxes
    end

    
    properties (Access = private)
        N               % Liczba probek
        n               % indeks probek
        x               % wektor probek sygnalu
        w               % wektor probek okna czasowego
        Nrokna          % numer wybranego okna czasowego
        Nrwykresu       % numer wybranego wykresu

        pKaiser         %parametr okna kaisera
        pGauss          %parametr okna gaussa
        pTukey          %parametr okna Tukeya
        pCheby          %parametr okna Chebysheva

        padEn           % wskażnik użycia metody zero padding (0=off, 1=on)
        padNum          % liczba zer użyta w metodzie zero padding fft
    end
    
    methods (Access = private)
        
        function RysujWykres1(app)
            app.n = 0:app.N-1; 

            hold(app.UIAxes, "off");
            set(app.UIAxes,'YLimMode',"auto");
            plot(app.UIAxes, app.n,app.x,'b.');
            hold(app.UIAxes, "on");
            plot(app.UIAxes, app.n,app.x,'b');
            plot(app.UIAxes, app.n,app.w,'g.');
            plot(app.UIAxes, app.n,app.w,'g');
            plot(app.UIAxes, app.n,app.w.*app.x,'r.');
            plot(app.UIAxes, app.n,app.w.*app.x,'r');
        end
        
        function RysujWykres2(app)
            if app.padEn == 0
                f=fft(app.x.*app.w);
            else
                f=fft(app.x.*app.w, pow2(app.padNum + 6));
                
            end
            df = 128/length(f);
            app.n = 0:df:app.N-df; 

            modf=abs(f)/(app.N/2);
            hold(app.UIAxes, "off");
            set(app.UIAxes,'YLimMode',"auto")
            plot(app.UIAxes, app.n, modf,'g.');
            hold(app.UIAxes, "on");
            plot(app.UIAxes, app.n,modf,'g');
        end

        function RysujWykres3(app)
            if app.padEn == 0
                f=fft(app.x.*app.w);
            else
                f=fft(app.x.*app.w, pow2(app.padNum + 6));
            end
            df = 128/length(f);
            app.n = 0:df:app.N-df; 

            modf=abs(f)/(app.N/2);
            hold(app.UIAxes, "off");
            set(app.UIAxes,'YLimMode',"auto")
            plot(app.UIAxes, app.n,20*log10(modf),'g.');
            hold(app.UIAxes, "on");
            plot(app.UIAxes, app.n,20*log10(modf),'g');
        end

        function RysujWykres4(app)
            if app.padEn == 0
                f=fft(app.x.*app.w);
            else
                f=fft(app.x.*app.w, pow2(app.padNum + 6));
            end
            df = 128/length(f);
            app.n = 0:df:app.N-df;  

            modf=abs(f)/(app.N/2);
            alfa = angle(f);
            idx = modf<0.00001;
            alfa(idx) = NaN;

            hold(app.UIAxes, "off");
            set(app.UIAxes,'YLimMode',"auto")
            plot(app.UIAxes, app.n, alfa ,'g.');
            hold(app.UIAxes, "on");
            plot(app.UIAxes, app.n, alfa,'g');
        end
        
        function RysujWykres(app)
            switch(app.Nrwykresu)
                case 1
                    RysujWykres1(app);
                case 2
                    RysujWykres2(app);
                case 3
                    RysujWykres3(app);
                case 4
                    RysujWykres4(app);
            end
        end
        
        function ObliczOkno(app)
            switch(app.Nrokna)
                case 1
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = rectwin(app.N);
                    app.w = app.w';
                case 2
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = 2.*hann(app.N, "periodic");
                    app.w = app.w';
                case 3
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = 2.*triang(app.N+1);
                    app.w(length(app.w))=[];
                    app.w = app.w';
                    
                case 4 
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = 1.8519.*hamming(app.N, "periodic");
                    app.w = app.w';
                case 5
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = 2.3810.*blackman(app.N, "periodic");
                    app.w = app.w';
                case 6
                    app.KaiserEditField.Enable = "on";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = kaiser(app.N+1, app.pKaiser);
                    app.w(length(app.w))=[];
                    normalizujOkno(app);
                    
                case 7
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "on";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "off";

                    app.w = gausswin(app.N+1, app.pGauss);
                    app.w(length(app.w))=[];
                    normalizujOkno(app);
                    
                case 8
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "on";
                    app.ChebyEditField.Enable = "off";
                    
                    app.w = tukeywin(app.N+1, app.pTukey);
                    app.w(length(app.w))=[];
                    normalizujOkno(app);
                    
                case 9
                    app.KaiserEditField.Enable = "off";
                    app.GaussEditField.Enable = "off";
                    app.TukeyEditField.Enable = "off";
                    app.ChebyEditField.Enable = "on";
                    
                    app.w = chebwin(app.N+1, app.pCheby);
                    app.w(length(app.w))=[];
                    normalizujOkno(app);
                    
            end
        end


        function normalizujOkno(app)
            app.w = app.w';
            sum = 0;
            for i = 1:length(app.w)
                sum = sum + app.w(i);
            end
            
            multiplier = 128/sum;
            app.w = multiplier.*app.w;
        end
    end
    

    % Callbacks that handle component events
    methods (Access = private)

        % Code that executes after component creation
        function ad_init(app)
            app.N=128;
            app.n=0:app.N-1;
            app.x=zeros(1,app.N);
            app.w=ones(1,app.N);
            app.Nrokna=1;
            app.Nrwykresu=1;
            RysujWykres1(app);

            app.KaiserEditField.Enable = "off";
            app.GaussEditField.Enable = "off";
            app.TukeyEditField.Enable = "off";
            app.ChebyEditField.Enable = "off";
            app.pKaiser = 0.5;
            app.pGauss = 2.5;
            app.pTukey = 0.5;
            app.pCheby = 100;

            app.padEn = 0;
            app.padNum = 128;
        end

        % Button pushed function: CzytajprobkiButton
        function ad_czytaj_probki(app, event)
            [st1,st2]=uigetfile('*.mat','Czytaj dane');
            if st1~=0
                eval(['load ''' [st2,st1] ''' -mat x']);
                app.x=x;
            end
            %app.N = (length(app.x));
            RysujWykres(app);
        end

        % Value changed function: ListBoxOkno
        function ad_wybor_okna(app, event)
            app.Nrokna = app.ListBoxOkno.Value;
            ObliczOkno(app);
            RysujWykres(app);

        end

        % Value changed function: ListBoxWykres
        function ad_wybor_wykresu(app, event)
            app.Nrwykresu = app.ListBoxWykres.Value;
            RysujWykres(app);
        end

        % Value changed function: KaiserEditField
        function KaiserEditFieldValueChanged(app, event)
            app.pKaiser = app.KaiserEditField.Value;
            ObliczOkno(app);
            RysujWykres(app);
        end

        % Value changed function: GaussEditField
        function GaussEditFieldValueChanged(app, event)
            app.pGauss = app.GaussEditField.Value;
            ObliczOkno(app);
            RysujWykres(app);            
        end

        % Value changed function: TukeyEditField
        function TukeyEditFieldValueChanged(app, event)
            app.pTukey = app.TukeyEditField.Value;
            ObliczOkno(app);
            RysujWykres(app);  
        end

        % Value changed function: ChebyEditField
        function ChebyEditFieldValueChanged(app, event)
            app.pCheby = app.ChebyEditField.Value;
            ObliczOkno(app);
            RysujWykres(app);
        end

        % Value changed function: ListBoxZeroPad
        function ListBoxZeroPadValueChanged(app, event)
            app.padNum = app.ListBoxZeroPad.Value;

            ObliczOkno(app);
            RysujWykres(app);
        end

        % Value changed function: UyjdyskretnegouzupenieniazeramiCheckBox
        function UyjdyskretnegouzupenieniazeramiCheckBoxValueChanged(app, event)
            app.padEn = app.UyjdyskretnegouzupenieniazeramiCheckBox.Value;
            
            ObliczOkno(app);
            RysujWykres(app);
        end
    end

    % Component initialization
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create UIFigure and hide until all components are created
            app.UIFigure = uifigure('Visible', 'off');
            app.UIFigure.Position = [100 100 1120 607];
            app.UIFigure.Name = 'MATLAB App';

            % Create GridLayout3
            app.GridLayout3 = uigridlayout(app.UIFigure);
            app.GridLayout3.ColumnWidth = {'1x', '1x', '1x'};
            app.GridLayout3.RowHeight = {'1x', '1x', '1x', '1x', '1x', '1x', '1x'};

            % Create UIAxes
            app.UIAxes = uiaxes(app.GridLayout3);
            title(app.UIAxes, 'Title')
            xlabel(app.UIAxes, 'X')
            ylabel(app.UIAxes, 'Y')
            zlabel(app.UIAxes, 'Z')
            app.UIAxes.Layout.Row = [1 5];
            app.UIAxes.Layout.Column = [1 2];

            % Create CzytajprobkiButton
            app.CzytajprobkiButton = uibutton(app.GridLayout3, 'push');
            app.CzytajprobkiButton.ButtonPushedFcn = createCallbackFcn(app, @ad_czytaj_probki, true);
            app.CzytajprobkiButton.Layout.Row = 1;
            app.CzytajprobkiButton.Layout.Column = 3;
            app.CzytajprobkiButton.Text = 'Czytaj probki';

            % Create TabGroup
            app.TabGroup = uitabgroup(app.GridLayout3);
            app.TabGroup.Layout.Row = [2 5];
            app.TabGroup.Layout.Column = 3;

            % Create OknaTab
            app.OknaTab = uitab(app.TabGroup);
            app.OknaTab.Title = 'Okna';

            % Create GridLayout2
            app.GridLayout2 = uigridlayout(app.OknaTab);
            app.GridLayout2.ColumnWidth = {'1x'};
            app.GridLayout2.RowHeight = {'1x'};

            % Create ListBoxOkno
            app.ListBoxOkno = uilistbox(app.GridLayout2);
            app.ListBoxOkno.Items = {'Okno prostokątne', 'Okon Hanna', 'Okon trójkątne', 'Okno Hamminga', 'Okno Blackmana', '[p]Okno Kaisera', '[p]Okno Gaussa', '[p]Okno Tukeya', '[p]Okno Chebysheva'};
            app.ListBoxOkno.ItemsData = [1 2 3 4 5 6 7 8 9];
            app.ListBoxOkno.ValueChangedFcn = createCallbackFcn(app, @ad_wybor_okna, true);
            app.ListBoxOkno.Layout.Row = 1;
            app.ListBoxOkno.Layout.Column = 1;
            app.ListBoxOkno.Value = 1;

            % Create ZeropadTab
            app.ZeropadTab = uitab(app.TabGroup);
            app.ZeropadTab.Title = 'Zero pad';

            % Create GridLayout4
            app.GridLayout4 = uigridlayout(app.ZeropadTab);
            app.GridLayout4.ColumnWidth = {'1x'};
            app.GridLayout4.RowHeight = {'1x', '1x', '1x', '1x', '1x'};

            % Create UyjdyskretnegouzupenieniazeramiCheckBox
            app.UyjdyskretnegouzupenieniazeramiCheckBox = uicheckbox(app.GridLayout4);
            app.UyjdyskretnegouzupenieniazeramiCheckBox.ValueChangedFcn = createCallbackFcn(app, @UyjdyskretnegouzupenieniazeramiCheckBoxValueChanged, true);
            app.UyjdyskretnegouzupenieniazeramiCheckBox.Text = 'Użyj dyskretnego uzupełnienia zerami';
            app.UyjdyskretnegouzupenieniazeramiCheckBox.FontSize = 14;
            app.UyjdyskretnegouzupenieniazeramiCheckBox.Layout.Row = 1;
            app.UyjdyskretnegouzupenieniazeramiCheckBox.Layout.Column = 1;

            % Create ListBoxZeroPad
            app.ListBoxZeroPad = uilistbox(app.GridLayout4);
            app.ListBoxZeroPad.Items = {'128', '256', '512', '1024', '2048', '4096', '8192', '16384', '32768', '65536'};
            app.ListBoxZeroPad.ItemsData = [1 2 3 4 5 6 7 8 9 10];
            app.ListBoxZeroPad.ValueChangedFcn = createCallbackFcn(app, @ListBoxZeroPadValueChanged, true);
            app.ListBoxZeroPad.Layout.Row = [2 5];
            app.ListBoxZeroPad.Layout.Column = 1;
            app.ListBoxZeroPad.Value = 1;

            % Create ListBoxWykres
            app.ListBoxWykres = uilistbox(app.GridLayout3);
            app.ListBoxWykres.Items = {'Wykres w dziedzinie czasu', 'Ch-ka amplitudowa', 'Ch-ka amplitudowa w dB', 'Ch-ka fazowa'};
            app.ListBoxWykres.ItemsData = [1 2 3 4];
            app.ListBoxWykres.ValueChangedFcn = createCallbackFcn(app, @ad_wybor_wykresu, true);
            app.ListBoxWykres.Layout.Row = [6 7];
            app.ListBoxWykres.Layout.Column = 3;
            app.ListBoxWykres.Value = 1;

            % Create ParametryokienparametrycznychPanel
            app.ParametryokienparametrycznychPanel = uipanel(app.GridLayout3);
            app.ParametryokienparametrycznychPanel.Title = 'Parametry okien parametrycznych';
            app.ParametryokienparametrycznychPanel.Layout.Row = [6 7];
            app.ParametryokienparametrycznychPanel.Layout.Column = [1 2];

            % Create GridLayout
            app.GridLayout = uigridlayout(app.ParametryokienparametrycznychPanel);
            app.GridLayout.ColumnWidth = {'1x', '1x', '1x', '1x'};

            % Create KaiserEditFieldLabel
            app.KaiserEditFieldLabel = uilabel(app.GridLayout);
            app.KaiserEditFieldLabel.HorizontalAlignment = 'right';
            app.KaiserEditFieldLabel.Layout.Row = 1;
            app.KaiserEditFieldLabel.Layout.Column = 1;
            app.KaiserEditFieldLabel.Text = 'Kaiser:';

            % Create KaiserEditField
            app.KaiserEditField = uieditfield(app.GridLayout, 'numeric');
            app.KaiserEditField.ValueChangedFcn = createCallbackFcn(app, @KaiserEditFieldValueChanged, true);
            app.KaiserEditField.Layout.Row = 2;
            app.KaiserEditField.Layout.Column = 1;
            app.KaiserEditField.Value = 0.5;

            % Create GaussLabel
            app.GaussLabel = uilabel(app.GridLayout);
            app.GaussLabel.HorizontalAlignment = 'right';
            app.GaussLabel.Layout.Row = 1;
            app.GaussLabel.Layout.Column = 2;
            app.GaussLabel.Text = 'Gauss:';

            % Create GaussEditField
            app.GaussEditField = uieditfield(app.GridLayout, 'numeric');
            app.GaussEditField.ValueChangedFcn = createCallbackFcn(app, @GaussEditFieldValueChanged, true);
            app.GaussEditField.Layout.Row = 2;
            app.GaussEditField.Layout.Column = 2;
            app.GaussEditField.Value = 2.5;

            % Create TukeyEditFieldLabel
            app.TukeyEditFieldLabel = uilabel(app.GridLayout);
            app.TukeyEditFieldLabel.HorizontalAlignment = 'right';
            app.TukeyEditFieldLabel.Layout.Row = 1;
            app.TukeyEditFieldLabel.Layout.Column = 3;
            app.TukeyEditFieldLabel.Text = 'Tukey:';

            % Create TukeyEditField
            app.TukeyEditField = uieditfield(app.GridLayout, 'numeric');
            app.TukeyEditField.ValueChangedFcn = createCallbackFcn(app, @TukeyEditFieldValueChanged, true);
            app.TukeyEditField.Layout.Row = 2;
            app.TukeyEditField.Layout.Column = 3;
            app.TukeyEditField.Value = 0.5;

            % Create ChebyEditFieldLabel
            app.ChebyEditFieldLabel = uilabel(app.GridLayout);
            app.ChebyEditFieldLabel.HorizontalAlignment = 'right';
            app.ChebyEditFieldLabel.Layout.Row = 1;
            app.ChebyEditFieldLabel.Layout.Column = 4;
            app.ChebyEditFieldLabel.Text = 'Cheby:';

            % Create ChebyEditField
            app.ChebyEditField = uieditfield(app.GridLayout, 'numeric');
            app.ChebyEditField.ValueChangedFcn = createCallbackFcn(app, @ChebyEditFieldValueChanged, true);
            app.ChebyEditField.Layout.Row = 2;
            app.ChebyEditField.Layout.Column = 4;
            app.ChebyEditField.Value = 100;

            % Show the figure after all components are created
            app.UIFigure.Visible = 'on';
        end
    end

    % App creation and deletion
    methods (Access = public)

        % Construct app
        function app = adg_v2

            % Create UIFigure and components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.UIFigure)

            % Execute the startup function
            runStartupFcn(app, @ad_init)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.UIFigure)
        end
    end
end